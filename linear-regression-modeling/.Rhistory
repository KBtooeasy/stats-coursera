library(dplyr)
library(ggplot2)
library(statsr)
library(ggplot2)
library(ggplot2)
library(dplyr)
library(ggally)
library(GGally)
data("evals")
summary(evals)
View(evals)
View(evals)
summary(evals$score)
eval$score
evals$score
qqnorm(evals$score)
pnorm(evals$score)
ggplot(data = evals)
ggplot(data = evals, aes(evals$score)) + geom_histogram()
ggplot(data = evals, aes(evals$score)) + geom_histogram(binwidth = 1)
ggplot(data = evals, aes(evals$score)) + geom_histogram()
evals$score < 3
nrow(evals$score < 3)
test <- evals$score < 3
test
test == TRUE
test = "TRUE"
test <- evals$score < 3
sum(evals$score < 3, na.rm = TRUE)
ggplot(data = evals, aes(evals$score)) + geom_histogram(binwidth = 1)
hist(evals$score)
colname(evals)
varname(evals)
colnames(evals)
scatter(evals*)
scatter(evals)
ggplot(data= evals, aes(x= cls_level, y= ethnicity)) + geom_point()
ggplot(data= evals, aes(x= bty_f2upper, y= ethnicity)) + geom_point()
ggplot(data= evals, aes(x= ethnicity,y= bty_f2upper )) + geom_point()
ggplot(data= evals, aes(x= age,y= bty_avg )) + geom_point()
ggplot(data= evals, aes(x= age,y= bty_avg )) + geom_point()
boxplot(evals$bty_avg ~ evals$age)
boxplot(evals$bty_avg ~ evals$gender)
mosaic(evals$bty_avg, evals$gender)
mosaic(evals$bty_avg)
mosaicplot(evals$bty_avg, evals$gender)
mosaicplot(evals$bty_avg)
mosaicplot(evals$gender ~ evals$age)
mosaicplot(evals$gender ~ evals$ethnicity)
mosaicplot(evals$gender ~ evals$rank)
ggplot(data=evals, aes(x=bty_avg, y = score))
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_point()
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_smooth(method = lm)
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_point()
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_point() + geom_smooth(method = lm)
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_point() + geom_smooth()
sum(evals)
sum(evals$score)
nrows(evals$score)
nuberrows(evals$score)
nrow(evals$score)
count(evals$score)
?geom_jitter
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter()
?geom_jitter
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter()
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter() + geom_smooth()
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter() + geom_smooth(method = lm)
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter() + geom_smooth(method = p)
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter() + geom_smooth(method= lm)
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter() + geom_smooth(method= lm, se=false)
ggplot(data=evals, aes(x=bty_avg, y = score)) + geom_jitter() + geom_smooth(method= lm, se= FALSE)
lm_score_bty = lm(score ~ bty_avg)
lm_score_bty = lm(score ~ bty_avg, data= evals)
summmary(lm_score_bty)
summary(lm_score_bty)
lm_score_bty = lm(score ~ bty_avg, data= evals)
ggplot(data = lm_score_bty, aes(residuals)) + geom_point()
ggplot(data = lm_score_bty, aes(x=residuals, y = evals$score)) + geom_point()
plot(evals$score ~ lm_score_bty$residuals)
histogram(evals$score ~ lm_score_bty$residuals)
histogram(lm_score_bty$residuals)
histo(lm_score_bty$residuals)
hist(lm_score_bty$residuals)
summary(lm_score_bty)
colnames(lm_score_bty)
lm_score_bty
lm_score_bty$residuals
ggplot(data = lm_score_bty, aes(x=residuals, y = evals$score)) + geom_jitter()
ggplot(data = lm_score_bty$residuals, aes(residuals)) + geom_jitter()
ggplot(data = lm_score_bty$residuals) + geom_jitter()
ggplot(data = lm_score_bty, aes(x=residuals)) + geom_jitter()
ggplot(data = lm_score_bty, aes(x=lm_score_btyresiduals)) + geom_jitter()
ggplot(data = lm_score_bty, aes(x=lm_score_bty$residuals, y = lm_score_bty$fitted.values)) + geom_jitter()
ggplot(data = lm_score_bty, aes(x=lm_score_bty$residuals, y = lm_score_bty$fitted.values)) + geom_jitter()
ggplot(data = lm_score_bty, aes(y=lm_score_bty$residuals, x = lm_score_bty$fitted.values)) + geom_jitter()
ggplot(data = lm_score_bty, aes(y=lm_score_bty$residuals, x = lm_score_bty$fitted.values)) + geom_jitter() + geom_smooth()
hist(lm_score_bty$residuals)
ggplot(data = evals, aes(x = bty_f1lower, y = bty_avg)) +
geom_jitter()
evals %>%
summarise(cor(bty_avg, bty_f1lower))
colnames(eval)
colnames(evals)
ggpairs(evals, columns = 13:13)
ggpairs(evals, columns = 13:19)
ggpairs(evals, columns = 13:13)
ggpairs(evals, columns = 13:14)
ggpairs(evals, columns = 13:15)
ggpairs(evals, columns = 13:16)
ggpairs(evals, columns = 13:19)
m_bty_gen <- lm ( scoere ~ bty_avg + gender, data = evals)
m_bty_gen <- lm ( score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
m_bty_gen <- lm ( score ~ gender, data = evals)
summary(m_bty_gen)
m_bty_gen <- lm ( score ~ gender, data = evals)
m_bty_gen <- lm ( score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
qnorm(m_bty_gen$residuals)
qqnorm(m_bty_gen$residuals)
qqnorm(m_bty_gen$residuals) + qqline(m_bty_gen$residuals)
qqnorm(m_bty_gen$residuals) + qqline(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
multilines(m_bty_gen)
multiLines(m_bty_gen)
summary(m_bty_gen)
lm_bty_rank = lm (score ~ bty_avg + rank, data = evals)
summary(lm_bty_rank)
newprof <- data.frame(gender = "male", bty_avg = 3)
predict(m_bty_gen, newprof)
predict(m_bty_gen, newprof, interval = "prediction", level= 0.95)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
# We drop classe prof (number of prof teaching the same course) since it has the highest p-value
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 = <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
m2 = <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
m3 = <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
m3 = <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg + pic_outfit + pic_color, data = evals)
lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg + pic_outfit + pic_color, data = evals)
m3 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval + cls_students + cls_level + cls_credits + bty_avg + pic_outfit + pic_color, data = evals)
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
summary(m3)$adj.r.squared
summary(m1)$adj.r.squared
r.squared = c()
# The full model:
m_full = lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['full'] = summary(m_full)$adj.r.squared
# Remove rank:
m1 = lm(score ~ ethnicity + gender + language + age + cls_perc_eval + cls_students +
cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['rank'] = summary(m1)$adj.r.squared
# Remove ethnicity:
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['ethnicity'] = summary(m2)$adj.r.squared
# Remove gender:
m3 = lm(score ~ rank + ethnicity + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['gender '] = summary(m3)$adj.r.squared
# language
m4 = lm(score ~ rank + ethnicity + gender + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['language'] = summary(m4)$adj.r.squared
# age
m5 = lm(score ~ rank + ethnicity + gender + language + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['age'] = summary(m5)$adj.r.squared
# cls_perc_eval
m6 = lm(score ~ rank + ethnicity + gender + language + age  +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['cls_perc_eval'] = summary(m6)$adj.r.squared
# cls_students
m7 = lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval +
cls_level + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['cls_students'] = summary(m7)$adj.r.squared
# cls_level
m8 = lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval +
cls_students + cls_profs + cls_credits + bty_avg, data = evals)
r.squared['cls_level'] = summary(m8)$adj.r.squared
# cls_profs
m9 = lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_credits + bty_avg, data = evals)
r.squared['cls_profs'] = summary(m9)$adj.r.squared
# cls_credits
m10 = lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + bty_avg, data = evals)
r.squared['cls_credits'] = summary(m10)$adj.r.squared
# bty_avg
m11 = lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits, data = evals)
r.squared['bty_avg'] = summary(m11)$adj.r.squared
r.squared
summary(m3)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
which(r.squared == max(r.squared))
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
test <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg, data = evals)
summary(test)$adj.r.squared
summary(m9)
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprod)
predict(m9, newprof)
summary(eval$score)
sum(evals$score < 3, na.rm = TRUE)
ggplot(data = evals, aes(evals$score)) + geom_histogram(binwidth = 1)
hist(evals$score)
evals$cls_perc_eval
newprof2 <- data.frame(rank = "teaching", ethnicity="minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="not english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="non-english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 1)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 1)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=80, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 1)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof2)
newprof2 <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof2)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=80, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 1)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=80, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 1)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=80, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 1)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 10)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 15)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "female", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof)
#Example:
newprof <- data.frame(rank = "teaching", ethnicity="not minority", language="english", age=40, cls_perc_eval= 50, cls_students = 20, gender = "male", cls_level = "upper", cls_credits = "one credit", bty_avg = 8)
predict(m9, newprof)
